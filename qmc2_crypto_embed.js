
/* tslint:disable */
/* eslint-disable */
(function (global, TextDecoder, factory) {
    if (typeof define === "function" && define.amd) {
        define("QMC2CryptoModule", [], () => factory(TextDecoder));
    } else if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = factory(TextDecoder);
    } else {
        global.QMC2CryptoModule = factory(TextDecoder);
    }
})(
    typeof window !== "undefined" ? window : this,
    typeof TextDecoder === 'undefined' ? (0, require('util')).TextDecoder : TextDecoder,
    function (TextDecoder) {
        const cachedTextDecoder = new TextDecoder('utf-8', {ignoreBOM: true, fatal: true});
        cachedTextDecoder.decode();

        const __wasm_blob = Uint8Array.from(atob(""), c => c.charCodeAt());
        let __last_inst;

        const exports = (function () {
            
            let wasm;
            
            // let cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });
            
            // cachedTextDecoder.decode();
            
            let cachegetUint8Memory0 = null;
            function getUint8Memory0() {
                if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
                    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
                }
                return cachegetUint8Memory0;
            }
            
            function getStringFromWasm0(ptr, len) {
                return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
            }
            
            const heap = new Array(32).fill(undefined);
            
            heap.push(undefined, null, true, false);
            
            let heap_next = heap.length;
            
            function addHeapObject(obj) {
                if (heap_next === heap.length) heap.push(heap.length + 1);
                const idx = heap_next;
                heap_next = heap[idx];
            
                heap[idx] = obj;
                return idx;
            }
            
            function getObject(idx) { return heap[idx]; }
            
            function dropObject(idx) {
                if (idx < 36) return;
                heap[idx] = heap_next;
                heap_next = idx;
            }
            
            function takeObject(idx) {
                const ret = getObject(idx);
                dropObject(idx);
                return ret;
            }
            
            let cachegetInt32Memory0 = null;
            function getInt32Memory0() {
                if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {
                    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);
                }
                return cachegetInt32Memory0;
            }
            
            let WASM_VECTOR_LEN = 0;
            
            function passArray8ToWasm0(arg, malloc) {
                const ptr = malloc(arg.length * 1);
                getUint8Memory0().set(arg, ptr / 1);
                WASM_VECTOR_LEN = arg.length;
                return ptr;
            }
            
            let cachedTextEncoder = new TextEncoder('utf-8');
            
            const encodeString = (typeof cachedTextEncoder.encodeInto === 'function'
                ? function (arg, view) {
                return cachedTextEncoder.encodeInto(arg, view);
            }
                : function (arg, view) {
                const buf = cachedTextEncoder.encode(arg);
                view.set(buf);
                return {
                    read: arg.length,
                    written: buf.length
                };
            });
            
            function passStringToWasm0(arg, malloc, realloc) {
            
                if (realloc === undefined) {
                    const buf = cachedTextEncoder.encode(arg);
                    const ptr = malloc(buf.length);
                    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);
                    WASM_VECTOR_LEN = buf.length;
                    return ptr;
                }
            
                let len = arg.length;
                let ptr = malloc(len);
            
                const mem = getUint8Memory0();
            
                let offset = 0;
            
                for (; offset < len; offset++) {
                    const code = arg.charCodeAt(offset);
                    if (code > 0x7F) break;
                    mem[ptr + offset] = code;
                }
            
                if (offset !== len) {
                    if (offset !== 0) {
                        arg = arg.slice(offset);
                    }
                    ptr = realloc(ptr, len, len = offset + arg.length * 3);
                    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
                    const ret = encodeString(arg, view);
            
                    offset += ret.written;
                }
            
                WASM_VECTOR_LEN = offset;
                return ptr;
            }
            
            
            
            
            async function load(module, imports) {
                if (typeof Response === 'function' && module instanceof Response) {
                    if (typeof WebAssembly.instantiateStreaming === 'function') {
                        try {
                            return await WebAssembly.instantiateStreaming(module, imports);
            
                        } catch (e) {
                            if (module.headers.get('Content-Type') != 'application/wasm') {
                                console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
            
                            } else {
                                throw e;
                            }
                        }
                    }
            
                    const bytes = await module.arrayBuffer();
                    return await WebAssembly.instantiate(bytes, imports);
            
                } else {
                    const instance = await WebAssembly.instantiate(module, imports);
            
                    if (instance instanceof WebAssembly.Instance) {
                        return { instance, module };
            
                    } else {
                        return instance;
                    }
                }
            }
            
            async function init(input) {
                if (typeof input === 'undefined') {
                    input = __wasm_blob;
                }
                const imports = {};
                imports.wbg = {};
                imports.wbg.__wbindgen_string_new = function(arg0, arg1) {
                    var ret = getStringFromWasm0(arg0, arg1);
                    return addHeapObject(ret);
                };
                imports.wbg.__wbg_new_693216e109162396 = function() {
                    var ret = new Error();
                    return addHeapObject(ret);
                };
                imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function(arg0, arg1) {
                    var ret = getObject(arg1).stack;
                    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);
                    var len0 = WASM_VECTOR_LEN;
                    getInt32Memory0()[arg0 / 4 + 1] = len0;
                    getInt32Memory0()[arg0 / 4 + 0] = ptr0;
                };
                imports.wbg.__wbg_error_09919627ac0992f5 = function(arg0, arg1) {
                    try {
                        console.error(getStringFromWasm0(arg0, arg1));
                    } finally {
                        wasm.__wbindgen_free(arg0, arg1);
                    }
                };
                imports.wbg.__wbindgen_object_drop_ref = function(arg0) {
                    takeObject(arg0);
                };
                imports.wbg.__wbindgen_throw = function(arg0, arg1) {
                    throw new Error(getStringFromWasm0(arg0, arg1));
                };
                imports.wbg.__wbindgen_rethrow = function(arg0) {
                    throw takeObject(arg0);
                };
            
                if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
                    input = fetch(input);
                }
            
            
            
                const { instance, module } = await load(await input, imports);
            
                wasm = instance.exports;
                init.__wbindgen_wasm_module = module;
            
                return wasm;
            }
            
            // export default init;
            

            function injectToExports(instance) {
                const exports = Object.create(null);
                exports._instance = instance;
                // 
        
                /**
                * @returns {number}
                */
                function get_recommended_detection_size() {
                    var ret = instance.get_recommended_detection_size();
                    return ret >>> 0;
                }
                exports.get_recommended_detection_size = get_recommended_detection_size;
        
                /**
                * @param {Uint8Array} buf
                * @returns {DetectionWrapper}
                */
                function detect(buf) {
                    var ptr0 = passArray8ToWasm0(buf, instance.__wbindgen_malloc);
                    var len0 = WASM_VECTOR_LEN;
                    var ret = instance.detect(ptr0, len0);
                    return DetectionWrapper.__wrap(ret);
                }
                exports.detect = detect;
        
                /**
                * @param {string} ekey
                * @returns {QMC2CryptoWrapper}
                */
                function decrypt_factory(ekey) {
                    var ptr0 = passStringToWasm0(ekey, instance.__wbindgen_malloc, instance.__wbindgen_realloc);
                    var len0 = WASM_VECTOR_LEN;
                    var ret = instance.decrypt_factory(ptr0, len0);
                    return QMC2CryptoWrapper.__wrap(ret);
                }
                exports.decrypt_factory = decrypt_factory;
        
                /**
                * @param {number} a
                * @param {number} b
                * @returns {number}
                */
                function add(a, b) {
                    var ret = instance.add(a, b);
                    return ret >>> 0;
                }
                exports.add = add;
        
                /**
                */
                class DetectionWrapper {
                
                    static __wrap(ptr) {
                        const obj = Object.create(DetectionWrapper.prototype);
                        obj.ptr = ptr;
                
                        return obj;
                    }
                
                    __destroy_into_raw() {
                        const ptr = this.ptr;
                        this.ptr = 0;
                
                        return ptr;
                    }
                
                    free() {
                        const ptr = this.__destroy_into_raw();
                        instance.__wbg_detectionwrapper_free(ptr);
                    }
                    /**
                    */
                    get eof_position() {
                        var ret = instance.__wbg_get_detectionwrapper_eof_position(this.ptr);
                        return ret;
                    }
                    /**
                    * @param {number} arg0
                    */
                    set eof_position(arg0) {
                        instance.__wbg_set_detectionwrapper_eof_position(this.ptr, arg0);
                    }
                    /**
                    */
                    get ekey_position() {
                        var ret = instance.__wbg_get_detectionwrapper_ekey_position(this.ptr);
                        return ret;
                    }
                    /**
                    * @param {number} arg0
                    */
                    set ekey_position(arg0) {
                        instance.__wbg_set_detectionwrapper_ekey_position(this.ptr, arg0);
                    }
                    /**
                    */
                    get ekey_len() {
                        var ret = instance.__wbg_get_detectionwrapper_ekey_len(this.ptr);
                        return ret >>> 0;
                    }
                    /**
                    * @param {number} arg0
                    */
                    set ekey_len(arg0) {
                        instance.__wbg_set_detectionwrapper_ekey_len(this.ptr, arg0);
                    }
                    /**
                    * @returns {string}
                    */
                    get_song_id() {
                        try {
                            const retptr = instance.__wbindgen_add_to_stack_pointer(-16);
                            instance.detectionwrapper_get_song_id(retptr, this.ptr);
                            var r0 = getInt32Memory0()[retptr / 4 + 0];
                            var r1 = getInt32Memory0()[retptr / 4 + 1];
                            return getStringFromWasm0(r0, r1);
                        } finally {
                            instance.__wbindgen_add_to_stack_pointer(16);
                            instance.__wbindgen_free(r0, r1);
                        }
                    }
                }
                exports.DetectionWrapper = DetectionWrapper;
        
                /**
                */
                class QMC2CryptoWrapper {
                
                    static __wrap(ptr) {
                        const obj = Object.create(QMC2CryptoWrapper.prototype);
                        obj.ptr = ptr;
                
                        return obj;
                    }
                
                    __destroy_into_raw() {
                        const ptr = this.ptr;
                        this.ptr = 0;
                
                        return ptr;
                    }
                
                    free() {
                        const ptr = this.__destroy_into_raw();
                        instance.__wbg_qmc2cryptowrapper_free(ptr);
                    }
                    /**
                    * @returns {number}
                    */
                    get_recommended_block_size() {
                        var ret = instance.qmc2cryptowrapper_get_recommended_block_size(this.ptr);
                        return ret >>> 0;
                    }
                    /**
                    * @param {number} offset
                    * @param {Uint8Array} buf
                    */
                    decrypt(offset, buf) {
                        try {
                            var ptr0 = passArray8ToWasm0(buf, instance.__wbindgen_malloc);
                            var len0 = WASM_VECTOR_LEN;
                            instance.qmc2cryptowrapper_decrypt(this.ptr, offset, ptr0, len0);
                        } finally {
                            buf.set(getUint8Memory0().subarray(ptr0 / 1, ptr0 / 1 + len0));
                            instance.__wbindgen_free(ptr0, len0 * 1);
                        }
                    }
                }
                exports.QMC2CryptoWrapper = QMC2CryptoWrapper;
        
                instance.__init();
                return exports;
            }

            return async function () {
                const instance = await init.apply(this, arguments);
                // Don't overwrite.
                if (!__last_inst) {
                    __last_inst = instance;
                }
                return injectToExports(instance);
            };
        })();

        Object.defineProperty(exports, 'get_recommended_detection_size', {
            get: function () { return __last_inst.get_recommended_detection_size; }
        });
        Object.defineProperty(exports, 'detect', {
            get: function () { return __last_inst.detect; }
        });
        Object.defineProperty(exports, 'decrypt_factory', {
            get: function () { return __last_inst.decrypt_factory; }
        });
        Object.defineProperty(exports, 'add', {
            get: function () { return __last_inst.add; }
        });
        Object.defineProperty(exports, 'DetectionWrapper', {
            get: function () { return __last_inst.DetectionWrapper; }
        });
        Object.defineProperty(exports, 'QMC2CryptoWrapper', {
            get: function () { return __last_inst.QMC2CryptoWrapper; }
        });

        return exports;
    });
